<div class="container bg-light p-3 rounded-lg shadow">
    <div class="d-flex">
        <h1>
            Quản lý chuyên mục
        </h1>
        <button class="btn btn-primary ml-auto" data-toggle="modal" data-target="#addCategoryModal">
            Thêm chuyên mục
        </button>
    </div>
</div>

<div class="container bg-light p-3 rounded-lg shadow my-4">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Danh mục</th>
                <th scope="col">Chuyên mục</th>
                <th scope="col">Mô tả</th>
                <th scope="col">&nbsp;</th>
            </tr>
        </thead>
        <tbody id="category-content">
        </tbody>
    </table>
    <nav aria-label="Page navigation example">
        <ul class="pagination" id="pagination">
        </ul>
    </nav>
</div>


<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalTitle" aria-hidden="true">
    <div class="modal-dialog">
        <form class="modal-content" method="post" action="/admin/category/create">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalTitle">Thêm chuyên mục</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="categoryDescription">Thuộc danh mục</label>
                    <select class="custom-select" name="group_id" id="group_id">
                        {{#each this.categoryGroups}}
                        <option value="{{id}}">{{name}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="form-group">
                    <label for="categoryName">Tên chuyên mục</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                </div>
                <div class="form-group">
                    <label for="categoryDescription">Mô tả</label>
                    <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="submit" class="btn btn-primary">Thêm mới</button>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalTitle"
    aria-hidden="true">
    <div class="modal-dialog">
        <form class="modal-content" method="post" action="/admin/category/edit">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalTitle">Sửa chuyên mục</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editCategoryId" name="id">
                <div class="form-group">
                    <label for="categoryDescription">Thuộc danh mục</label>
                    <select class="custom-select" name="group_id" id="editCategoryGroup">
                        {{#each this.categoryGroups}}
                        <option value="{{id}}">{{name}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="form-group">
                    <label for="editCategoryName">Tên chuyên mục</label>
                    <input type="text" class="form-control" id="editCategoryName" name="name" required>
                </div>
                <div class="form-group">
                    <label for="editCategoryDescription">Mô tả</label>
                    <textarea class="form-control" id="editCategoryDescription" name="description" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalTitle"
    aria-hidden="true">
    <div class="modal-dialog">
        <form class="modal-content" method="post" action="/admin/category/delete">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCategoryModalTitle">Xóa chuyên mục</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="deleteCategoryId" name="id">
                <p>Bạn có chắc chắn muốn xóa chuyên mục này không?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="submit" class="btn btn-primary">Xóa</button>
            </div>
        </form>
    </div>
</div>


<script>
    $(document).ready(function () {
        loadAPage(1); // Gọi hàm loadAPage khi lần đầu tải trang
        function loadAPage(page) {
            fetch(`/admin/category/getPage?page=${page}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    renderPagination(data);
                    renderData(data);
                })
                .catch(error => {
                    console.error('Error fetching categories while paginating:', error);
                });


            function renderPagination(data) {
                var $pagination = $('#pagination');
                $pagination.empty();
                //prev page button
                var $prevBtn = $('<li>', { class: 'page-item' });
                if (parseInt(data.currentPage, 10) === 1) {
                    $prevBtn.addClass('disabled');
                } else {
                    $prevBtn.removeClass('disabled');
                }
                $prevBtn.attr('data-page', data.currentPage - 1);
                var $prevPageLink = $('<a>', { class: 'page-link', href: '#', text: 'Previous' });
                $prevBtn.append($prevPageLink);
                $pagination.append($prevBtn);
                //Each page button
                data.pageArray.forEach(pageIndex => {
                    var $pageBtn = $('<li>', { class: 'page-item', 'data-page': pageIndex });
                    if (pageIndex === data.currentPage) {
                        $pageBtn.addClass('active');
                    }
                    var $pageLink = $('<a>', { class: 'page-link', href: '#', text: pageIndex });
                    $pageBtn.append($pageLink);
                    $pagination.append($pageBtn);
                });

                //Next page button
                var $nextBtn = $('<li>', { class: 'page-item' });
                if (parseInt(data.currentPage) === data.totalPages) {
                    $nextBtn.addClass('disabled');
                } else {
                    $nextBtn.removeClass('disabled');
                }
                $nextBtn.attr('data-page', data.currentPage + 1);
                var $nextPageLink = $('<a>', { class: 'page-link', href: '#', text: 'Next' });
                $nextBtn.append($nextPageLink);
                $pagination.append($nextBtn);

                //click pagination event
                $('.page-item').click(function (e) {
                    if ($(this).hasClass('disabled')) {
                        e.preventDefault(); // Ngăn chặn click nếu phần tử có lớp 'disabled'
                    } else {
                        var page = $(this).data('page');
                        if (page !== undefined) {
                            loadAPage(page);
                        }
                    }
                });
            }
            function renderData(data) {
                var contentBox = document.getElementById('category-content');
                if (data.empty) {
                    contentBox.innerHTML = '<tr><td colspan="4" class="text-center">Hiện chưa có chuyên mục nào</td></tr>';
                }
                else {
                    var index = 1;
                    contentBox.innerHTML = '';
                    data.categories.forEach(category => {
                        var row = document.createElement('tr');
                        row.setAttribute('data-id', category.id);
                        contentBox.appendChild(row);

                        //create table data
                        var rowIndex = document.createElement('th');
                        rowIndex.setAttribute('scope', 'row');
                        rowIndex.innerText = index;
                        index++;
                        row.appendChild(rowIndex);

                        var groupName = document.createElement('td');
                        groupName.innerText = category.group_name;
                        row.appendChild(groupName);

                        var categoryName = document.createElement('td');
                        categoryName.innerText = category.name;
                        row.appendChild(categoryName);

                        var categoryDescription = document.createElement('td');
                        categoryDescription.innerText = category.description;
                        row.appendChild(categoryDescription);

                        //create modal button
                        var functionBox = document.createElement('td');
                        var editBtn = document.createElement('button');
                        editBtn.setAttribute('class', 'btn btn-primary edit-category');
                        editBtn.setAttribute('data-toggle', 'modal');
                        editBtn.setAttribute('data-target', '#editCategoryModal');
                        editBtn.setAttribute('data-id', category.id);
                        editBtn.setAttribute('data-name', category.name);
                        editBtn.setAttribute('data-description', category.description);
                        editBtn.setAttribute('data-groupid', category.group_id);
                        editBtn.innerText = 'Sửa';
                        functionBox.appendChild(editBtn);

                        var deleteBtn = document.createElement('button');
                        deleteBtn.setAttribute('class', 'btn btn-danger delete-category');
                        deleteBtn.setAttribute('data-toggle', 'modal');
                        deleteBtn.setAttribute('data-target', '#deleteCategoryModal');
                        deleteBtn.setAttribute('data-id', category.id);
                        deleteBtn.innerText = 'Xóa';
                        functionBox.appendChild(deleteBtn);
                        row.appendChild(functionBox);
                    });
                }
            }
        }

    });

</script>



<script>
    $(document).ready(function () {
        // Edit Modal Population
        $('#editCategoryModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var id = button.data('id');
            var name = button.data('name');
            var description = button.data('description');
            var group_id = button.data('groupid');

            var modal = $(this);
            modal.find('#editCategoryId').val(id);
            modal.find('#editCategoryName').val(name);
            modal.find('#editCategoryDescription').val(description);
            modal.find('#editCategoryGroup').val(group_id);
        });

        // Delete Modal Population
        $('#deleteCategoryModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var id = button.data('id');
            console.log(id);

            var modal = $(this);
            modal.find('#deleteCategoryId').val(id);
        });
    });
</script>